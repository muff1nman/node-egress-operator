pipeline {
    agent {
        node {
            label 'golang'
        }
    }
    stages {
        stage('Build go binary') {
            steps {
                sh """
                    #!/usr/bin/env bash \n
                    unset BASH_ENV PROMPT_COMMAND ENV && \
                    . /opt/rh/go-toolset-7/enable && \
                    go get -d github.com/muff1nman/node-egress-operator/pkg/stub && \
                    cd \$HOME/go/src/github.com/muff1nman/node-egress-operator && \
                    tmp/build/build.sh
                    """
            }
        }
        stage('Apply OpenShift Build Objects') {
            steps {
                script {
                    openshift.withCluster() {
                        dir('openshift/build') {
                            openshift.apply(readFile('build.yml'))
                        }
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.selector('bc', 'node-egress-operator').startBuild('--from-dir=$HOME/go/src/github.com/muff1nman/node-egress-operator/', '--wait')
                    }
                }
            }
        }
    }
}
// vim: ts=4:sw=4:expandtab
